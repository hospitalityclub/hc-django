# Generated by Django 2.1.7 on 2019-02-26 14:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import hvad.fields
import uuid


class Migration(migrations.Migration):

    replaces = [('hccore', '0001_initial'), ('hccore', '0002_auto_20190226_1211'), ('hccore', '0003_auto_20190226_1215'), ('hccore', '0004_auto_20190226_1322'), ('hccore', '0005_auto_20190226_1417')]

    initial = True

    dependencies = [
        ('cities_light', '0008_city_timezone'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('phone', models.CharField(blank=True, max_length=31, null=True, verbose_name='phone')),
                ('fax', models.CharField(blank=True, max_length=31, null=True, verbose_name='fax')),
                ('status', models.BooleanField(default=1, verbose_name='accepting guests')),
                ('hide_location', models.BooleanField(default=False, verbose_name='hide my location')),
                ('living_with_partner', models.BooleanField(default=0, help_text='boyfriend, girlfriend, wife, husband, etc.', verbose_name='living with partner')),
                ('living_with_parents', models.BooleanField(default=0, verbose_name='living with parents')),
                ('living_with_grandparents', models.BooleanField(default=0, verbose_name='living with grandparents')),
                ('living_with_siblings', models.BooleanField(default=0, verbose_name='living with siblings')),
                ('living_with_pets', models.CharField(choices=[('no', 'no'), ('dog', 'dog(s)'), ('cat', 'cat(s)'), ('catsndogs', 'cats and dogs'), ('other', 'other')], default='no', max_length=31, verbose_name='living with pets')),
                ('living_alone', models.BooleanField(default=0, verbose_name='living alone')),
                ('own_room', models.PositiveSmallIntegerField(default=0, help_text='do you offer a private room?', verbose_name='own room')),
                ('bed', models.PositiveSmallIntegerField(default=0, help_text='do you offer to sleep in a bed?', verbose_name='Bed')),
                ('sofa', models.PositiveSmallIntegerField(default=0, help_text='do you offer to sleep on a sofa?', verbose_name='sofa')),
                ('mattress', models.PositiveSmallIntegerField(default=0, help_text='do you offer a mattress (on the floor)?', verbose_name='mattress')),
                ('space_on_the_floor', models.BooleanField(default=0, help_text='do you offer only space on the floor?', verbose_name='space on the floor')),
                ('garden', models.BooleanField(default=0, help_text='do you have a garden?', verbose_name='garden')),
                ('sleep_together', models.BooleanField(default=0, help_text='will your guests have to sleep with you or other people? People in guests travel company does not count.', verbose_name='sleep together')),
                ('bring_sleeping_bag', models.BooleanField(default=0, verbose_name='guest must bring own sleeping bag')),
                ('bring_mattress', models.BooleanField(default=0, verbose_name='guest must bring own mattress')),
                ('bring_tent', models.BooleanField(default=0, verbose_name='guest must bring own tent')),
                ('max_guests', models.PositiveSmallIntegerField(db_index=True, default=1, help_text='how many guests maximum can you host at once?', verbose_name='maximum guests allowed')),
                ('max_stay_length', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='maximum stay length')),
                ('should_notify', models.PositiveSmallIntegerField(default=0, verbose_name='how many days ahead guest should confirm the arrival?')),
                ('must_notify', models.PositiveSmallIntegerField(default=0, verbose_name='how many days ahead guest must confirm the arrival?')),
                ('call_on_arrival', models.BooleanField(default=0, verbose_name='does guest have to phone call on arrival?')),
                ('do_not_call_before', models.TimeField(default=0, verbose_name='do not call before')),
                ('do_not_call_after', models.TimeField(default=0, verbose_name='do not call after')),
                ('guest_gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('transgender', 'transgender'), ('unspecified', 'unspecified')], default='unspecified', max_length=8, verbose_name='preferred guest gender')),
                ('smoking', models.CharField(choices=[('no', 'not allowed at all, inside or outside'), ('yes', 'allowed inside'), ('balcony', 'allowed in the balcony, terrace or garden'), ('outside', 'allowed only outside')], default='no', max_length=8, verbose_name='smoking policy')),
                ('no_drugs', models.BooleanField(default=1, verbose_name='drugs are not allowed')),
                ('no_alcohol', models.BooleanField(default=1, verbose_name='alcohol is not allowed')),
                ('pay_for_food', models.BooleanField(default=0, verbose_name='pay for consumed food')),
                ('pay_for_comm', models.BooleanField(default=0, help_text='guests have the ability to use and to pay for phone minutes, metered internet traffic', verbose_name='pay for used communication')),
                ('do_dishes', models.BooleanField(default=0, verbose_name='do dishes')),
                ('pets_allowed', models.CharField(choices=[('no', 'no'), ('dog', 'dog(s)'), ('cat', 'cat(s)'), ('catsndogs', 'cats and dogs'), ('other', 'other')], db_index=True, default='no', max_length=31, verbose_name='pets allowed')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to='cities_light.City', verbose_name='city')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255, verbose_name='street address')),
                ('best_times', models.CharField(max_length=255, verbose_name='best times to visit')),
                ('public_transport', models.TextField(blank=True, max_length=4095, null=True, verbose_name='public transport')),
                ('nearby_attractions', models.TextField(blank=True, max_length=4095, null=True, verbose_name='nearby attractions')),
                ('directions', models.TextField(blank=True, help_text='describe how to find your place', max_length=4095, null=True, verbose_name='directions')),
                ('offer_other', models.TextField(blank=True, help_text='describe what other services or activities you can offer to your guests', max_length=4095, null=True, verbose_name='offer other')),
                ('living_with_other_persons', models.CharField(blank=True, max_length=255, null=True, verbose_name='living with other persons')),
                ('other_restrictions', models.TextField(blank=True, max_length=4095, null=True, verbose_name='other restrictions')),
                ('additional_info', models.TextField(blank=True, max_length=4095, null=True, verbose_name='additional information')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.Address')),
            ],
            options={
                'db_table': 'hccore_address_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ContactMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('icon_class', models.CharField(blank=True, help_text='CSS icon class', max_length=31, null=True, verbose_name='icon class')),
                ('icon_image', models.ImageField(blank=True, null=True, upload_to='img/icons', verbose_name='icon image')),
                ('url_prefix', models.URLField(help_text='for example, for Telegram: http://t.me/', max_length=63, verbose_name='URL prefix')),
            ],
            options={
                'verbose_name': 'contact method',
                'verbose_name_plural': 'contact methods',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactMethodTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='examples: mobile phone, Telegram, alternate email', max_length=31, verbose_name='name')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.ContactMethod')),
            ],
            options={
                'db_table': 'hccore_contactmethod_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('hobby', models.CharField(max_length=31, verbose_name='hobby')),
            ],
            options={
                'verbose_name': 'hobby',
                'verbose_name_plural': 'hobbies',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('language', models.CharField(max_length=31, verbose_name='ISO language name')),
                ('language_native', models.CharField(max_length=31, verbose_name='native name')),
                ('iso639_1', models.CharField(max_length=2, verbose_name='ISO 639-1 code')),
                ('iso639_2t', models.CharField(max_length=3, verbose_name='ISO 639-2/T code')),
                ('iso639_2b', models.CharField(max_length=3, verbose_name='ISO 639-2/B code')),
            ],
            options={
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='member_photos', verbose_name='photo')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('transgender', 'transgender'), ('unspecified', 'unspecified')], default='unspecified', max_length=11, verbose_name='gender')),
                ('hide_name', models.BooleanField(default=False, verbose_name='hide my name')),
                ('offer_tour', models.BooleanField(default=False, verbose_name='offer to show around')),
                ('offer_dinner', models.BooleanField(default=False, verbose_name='offer dinner')),
                ('accepted', models.BooleanField(default=False, verbose_name='accepted into Hospitality Club')),
                ('agreed_with_terms', models.BooleanField(default=True, verbose_name='agreed with Hospitality Club Terms and Conditions')),
                ('status', models.CharField(choices=[('active', 'active'), ('kicked', 'kicked and banned'), ('passedaway', 'passed away'), ('takenout', 'taken out'), ('sleeper', 'sleeper'), ('inactive', 'inactive'), ('true', 'true'), ('false', 'false'), ('problems', 'problems'), ('buggy', 'buggy'), ('signed', 'signed'), ('needmore', 'need more'), ('morecompleted', 'more completed')], default='active', max_length=15, verbose_name='status')),
                ('ui_language', models.CharField(default='en', max_length=7, verbose_name='UI language')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'member',
                'verbose_name_plural': 'members',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MemberContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('contact_detail', models.CharField(blank=True, max_length=255, verbose_name='contact detail')),
                ('preferred', models.BooleanField(default=0, verbose_name='preferred')),
                ('share_by_default', models.BooleanField(default=1, verbose_name='share by default')),
                ('contact_method', models.CharField(choices=[('phone', 'phone'), ('email', 'email'), ('whatsapp', 'WhatsApp'), ('facebook', 'Facebook'), ('telegram', 'Telegram'), ('skype', 'Skype')], default='phone', max_length=15, verbose_name='contact method')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_contacts', to='hccore.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'member contact',
                'verbose_name_plural': 'member contacts',
            },
        ),
        migrations.CreateModel(
            name='MemberHobby',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='member_hobbies', to='hccore.Hobby', verbose_name='hobby')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_hobbies', to='hccore.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'member hobby',
                'verbose_name_plural': 'member hobbies',
            },
        ),
        migrations.CreateModel(
            name='MemberLanguage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('primary', models.BooleanField(default=False, verbose_name='primary')),
                ('level', models.CharField(choices=[('mother_tongue', 'mother tongue'), ('proficient', 'proficient'), ('advanced', 'advanced'), ('intermediate', 'intermediate'), ('beginner', 'beginner')], default='mother_tongue', max_length=15, verbose_name='level')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='member_languages', to='hccore.Language', verbose_name='language')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_languages', to='hccore.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'member language',
                'verbose_name_plural': 'member languages',
            },
        ),
        migrations.CreateModel(
            name='MemberLoginHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('ip_country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='member_login_history', to='cities_light.Country', verbose_name='country of IP address')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_login_history', to='hccore.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'member login history',
                'verbose_name_plural': 'member login history',
            },
        ),
        migrations.CreateModel(
            name='MemberRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('follow', models.BooleanField(default=False, verbose_name='follow')),
                ('trust', models.BooleanField(default=False, verbose_name='trust')),
                ('was_guest', models.BooleanField(default=False, verbose_name='was guest')),
                ('was_host', models.BooleanField(default=False, verbose_name='was host')),
                ('identify', models.BooleanField(default=False, help_text="I have checked member's passport or ID", verbose_name='identify')),
                ('was_identified', models.BooleanField(default=False, help_text='my passport or ID was chedked by member', verbose_name='was identified')),
                ('comment', models.TextField(max_length=4095, verbose_name='comment')),
                ('reported_inappropriate', models.BooleanField(default=False, verbose_name='reported inappropriate')),
                ('confirmed_inappropriate', models.BooleanField(default=False, verbose_name='confirmed inappropriate')),
                ('from_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_relations_sender', to='hccore.Member', verbose_name='from member')),
                ('to_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_relations_recipient', to='hccore.Member', verbose_name='to member')),
            ],
            options={
                'verbose_name': 'member relation',
                'verbose_name_plural': 'member relations',
            },
        ),
        migrations.CreateModel(
            name='MemberTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_myself', models.TextField(blank=True, max_length=4095, null=True, verbose_name='about yourself')),
                ('occupation', models.CharField(blank=True, max_length=255, null=True, verbose_name='occupation')),
                ('organizations', models.TextField(blank=True, help_text='describe your activity in public organizations', max_length=4095, null=True, verbose_name='member of organizations')),
                ('internal_notes', models.TextField(blank=True, help_text='for HC volunteer eyes only', null=True, verbose_name='internal notes')),
                ('feedback', models.TextField(blank=True, max_length=4095, null=True, verbose_name='feedback to HC')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.Member')),
            ],
            options={
                'db_table': 'hccore_member_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MemberTravel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('hc_experience', models.BooleanField(default=True, verbose_name='HC experience')),
                ('visit_date_from', models.DateField(auto_now_add=True, verbose_name='from')),
                ('visit_date_to', models.DateField(auto_now_add=True, verbose_name='to')),
                ('plan', models.BooleanField(default=False, verbose_name='plan')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='member_travels', to='cities_light.City', verbose_name='city')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_travels', to='hccore.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MemberTravelTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, max_length=4095, null=True, verbose_name='feedback')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.MemberTravel')),
            ],
            options={
                'db_table': 'hccore_membertravel_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('message', models.TextField(blank=True, max_length=4095, null=True, verbose_name='message')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('is_spam', models.BooleanField(default=False, verbose_name='is spam')),
                ('from_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_sender', to='hccore.Member', verbose_name='from member')),
                ('to_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_recipient', to='hccore.Member', verbose_name='to member')),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'message',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='hccore.Member', verbose_name='member'),
        ),
        migrations.AlterUniqueTogether(
            name='membertraveltranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='membertranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='contactmethodtranslation',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='addresstranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.RemoveField(
            model_name='contactmethodtranslation',
            name='master',
        ),
        migrations.AddField(
            model_name='address',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('hccore.Address', 'hccore.AddressTranslation'),
        ),
        migrations.AddField(
            model_name='address',
            name='latitude',
            field=models.DecimalField(db_index=True, decimal_places=6, default=0, max_digits=8, verbose_name='latitude'),
        ),
        migrations.AddField(
            model_name='address',
            name='longitude',
            field=models.DecimalField(db_index=True, decimal_places=6, default=0, max_digits=8, verbose_name='longitude'),
        ),
        migrations.AddField(
            model_name='address',
            name='postal_code',
            field=models.CharField(blank=True, max_length=15, null=True, verbose_name='postal code'),
        ),
        migrations.AddField(
            model_name='member',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('hccore.Member', 'hccore.MemberTranslation'),
        ),
        migrations.AddField(
            model_name='membertravel',
            name='_hvad_query',
            field=hvad.fields.SingleTranslationObject('hccore.MemberTravel', 'hccore.MemberTravelTranslation'),
        ),
        migrations.AlterField(
            model_name='address',
            name='guest_gender',
            field=models.CharField(choices=[('male', 'male'), ('female', 'female'), ('transgender', 'transgender'), ('unspecified', 'unspecified')], default='unspecified', max_length=11, verbose_name='preferred guest gender'),
        ),
        migrations.AlterField(
            model_name='address',
            name='living_alone',
            field=models.BooleanField(default=True, verbose_name='living alone'),
        ),
        migrations.AlterField(
            model_name='addresstranslation',
            name='master',
            field=hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.Address'),
        ),
        migrations.AlterField(
            model_name='membertranslation',
            name='master',
            field=hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.Member'),
        ),
        migrations.AlterField(
            model_name='membertraveltranslation',
            name='master',
            field=hvad.fields.MasterKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hccore.MemberTravel'),
        ),
        migrations.DeleteModel(
            name='ContactMethod',
        ),
        migrations.DeleteModel(
            name='ContactMethodTranslation',
        ),
        migrations.AlterField(
            model_name='membertravel',
            name='visit_date_from',
            field=models.DateField(verbose_name='from'),
        ),
        migrations.AlterField(
            model_name='membertravel',
            name='visit_date_to',
            field=models.DateField(verbose_name='to'),
        ),
        migrations.AlterModelOptions(
            name='membertravel',
            options={'verbose_name': 'member travel', 'verbose_name_plural': 'member travels'},
        ),
    ]
